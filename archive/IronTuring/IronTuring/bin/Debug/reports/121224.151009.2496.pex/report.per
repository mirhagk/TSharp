<?xml version="1.0" encoding="utf-8"?>
<pex id="{2de6ea09-4329-4a41-bf80-f2c334a08e86}" creationTime="2012-12-24 20:10:10Z" configuration="*\*\*" created="2012-12-24 20:10:10Z" pexVersion="0.94.51006.1" xml="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\reports\121224.151009.2496.pex\report.per" html="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\reports\121224.151009.2496.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe /assemblyresolutiondirectories:&quot;c:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:Irony;TuringGrammar /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\reports /testassemblyname:IronTuring.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:C:\skydrive\programming\IronTuring\IronTuring\IronTuring.csproj /testprojectnotupdate /testprojectskip" machineName="MIRHAGK-PC" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="8" clrVersion="4.0.30319.296" bitness="x86" user="mirhagk"><envVars><envVar name="HOMEPATH" value="\Users\mirhagk"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="MIRHAGK-PC"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 42 Stepping 7, GenuineIntel"/>
<envVar name="PROCESSOR_REVISION" value="2a07"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="TMP" value="C:\Users\mirhagk\AppData\Local\Temp"/>
<envVar name="TEMP" value="C:\Users\mirhagk\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\mirhagk\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0x10"/>
<envVar name="USERDOMAIN" value="mirhagk-PC"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="8"/>
<envVar name="windows_tracing_flags" value="3"/>
<envVar name="Path" value="C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files (x86)\Windows Live\Shared;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Windows\System32\WindowsPowerShell\v1.0\"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="asl.log" value="Destination=file"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\PowerShell\Modules\"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex6012_1"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="LOGONSERVER" value="\\MIRHAGK-PC"/>
<envVar name="USERPROFILE" value="C:\Users\mirhagk"/>
<envVar name="VisualStudioDir" value="C:\Users\mirhagk\Documents\Visual Studio 2010"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="APPDATA" value="C:\Users\mirhagk\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="windows_tracing_logfile" value="C:\BVTBin\Tests\installpackage\csilogfile.log"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="mirhagk"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex6012"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="FSharp.Core,FSharp.PowerPack,IronTuring,IronTuring.Tests,Irony,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,System,System.Core,System.Web,TuringGrammar"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="IronTuring" version="1.0.0.0" fileVersion="1.0.0.0" fullName="IronTuring, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe" fileName="IronTuring.exe"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<dump category="Tests" title="Build default assembly set for new project"><dtTree><dtTreeNode text="Build default assembly set for new project"><dtTextNode><rstring contentMode="memory"><![CDATA[visibility: exported and assembly(IronTuring)
Processing 9 types
Processing IronTuring
Scanning assembly references in IronTuring
Applying template AssemblyInfo to IronTuring
generating method bodies
flushing generated code
updating assembly references
]]></rstring>
</dtTextNode>
</dtTreeNode>
</dtTree>
</dump>
<fixture name="CodeGenOldTest" type="IronTuring.CodeGenOldTest" typeName="CodeGenOldTest" token="2000002" href="fix\IronTuring.Tests.556.html"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
<settings typeUnderTest="IronTuring.CodeGenOld"/>
<exploration shortName="Constructor(ParseTreeNode, String)" fullName="IronTuring.CodeGenOldTest.Constructor(ParseTreeNode, String)" isDynamicCode="true"><method><definition assemblyName="IronTuring.Tests" name="Constructor" token="6000001"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<uninstrumented testability="true" methodDisplayName="System.String System.IO.Path.GetFileName(System.String path)" declaringTypeDisplayName="System.IO.Path" methodShortDisplayName="Path.GetFileName(String)" wikiTopic="Testability Issue"><method><definition assemblyName="mscorlib" name="GetFileName" static="true" token="60041fb"><declaringType assemblyName="mscorlib" name="Path" token="2000709" namespace="System.IO"/>
<parameter name="path" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at CodeGenOld..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs(108)" method="CodeGenOld..ctor(ParseTreeNode, String)" offset="20" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs" line="108"><method assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
    public CodeGenOld(ParseTreeNode stmt, string moduleName)
    {]]></beforeSource>
<source><![CDATA[        if (Path.GetFileName(moduleName) != moduleName)]]></source>
<afterSource><![CDATA[        {
            throw new System.Exception("can only output into current directory!");
        }]]></afterSource>
</frame>
<frame value="  at CodeGenOldTest.Constructor(ParseTreeNode, String)" method="CodeGenOldTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000001"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented testability="true" methodDisplayName="System.String System.IO.Path.GetFileNameWithoutExtension(System.String path)" declaringTypeDisplayName="System.IO.Path" methodShortDisplayName="Path.GetFileNameWithoutExtension(String)" wikiTopic="Testability Issue"><method><definition assemblyName="mscorlib" name="GetFileNameWithoutExtension" static="true" token="60041fc"><declaringType assemblyName="mscorlib" name="Path" token="2000709" namespace="System.IO"/>
<parameter name="path" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at CodeGenOld..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs(113)" method="CodeGenOld..ctor(ParseTreeNode, String)" offset="58" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs" line="113"><method assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            throw new System.Exception("can only output into current directory!");
        }
]]></beforeSource>
<source><![CDATA[        AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[        AssemblyBuilder asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
        ModuleBuilder modb = asmb.DefineDynamicModule(moduleName);
        mainProgram = modb.DefineType("Program");]]></afterSource>
</frame>
<frame value="  at CodeGenOldTest.Constructor(ParseTreeNode, String)" method="CodeGenOldTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000001"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</uninstrumented>
<log level="message" time="2012-12-24 20:10:17Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<log level="message" time="2012-12-24 20:10:17Z" category="symbols" message="search path: ;"/>
<log level="message" time="2012-12-24 20:10:17Z" category="symbols" message="could not load symbols for C:\Windows\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<test name="Constructor" state="success" duration="1.33693097062314"/>
<generatedTest id="b3a806c0-362e-4ba1-bf3c-d929f73c946c" index="1" run="1" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="ConstructorThrowsArgumentNullException331"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="7" dtot="47" acov="7" atot="47"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="stmt">null</value>
<value name="moduleName">null</value>
<code><![CDATA[CodeGenOld codeGenOld;
codeGenOld = this.Constructor((ParseTreeNode)null, (string)null);
]]></code>
<methodCode imports="Irony.Parsing;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenOldTest))]
[PexRaisedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException331()
{
    CodeGenOld codeGenOld;
    codeGenOld = this.Constructor((ParseTreeNode)null, (string)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentNullException" source="mscorlib"><message><![CDATA[Value cannot be null.
Parameter name: assemblyName]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentNullException" token="2000093" namespace="System"/>
</type>
<value name="paramName">assemblyName</value>
<stackTrace><frame value="  at AssemblyName..ctor(String)" method="AssemblyName..ctor(String)" offset="19"><method assemblyName="mscorlib" name=".ctor" token="600269e"><declaringType assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="assemblyName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CodeGenOld..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs(113)" method="CodeGenOld..ctor(ParseTreeNode, String)" offset="58" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs" line="113"><method assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            throw new System.Exception("can only output into current directory!");
        }
]]></beforeSource>
<source><![CDATA[        AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[        AssemblyBuilder asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
        ModuleBuilder modb = asmb.DefineDynamicModule(moduleName);
        mainProgram = modb.DefineType("Program");]]></afterSource>
</frame>
<frame value="  at CodeGenOldTest.Constructor(ParseTreeNode, String)" method="CodeGenOldTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000001"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return moduleName == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-12-24 20:10:17Z" category="coverage" message="coverage increased from 0 to 7 blocks (+7) after flipping IronTuring.CodeGenOld..ctor at 0x0026"/>
<test name="Constructor" state="success" duration="0.03"/>
<generatedTest id="ee38d3fd-33ab-4810-ba5d-df2349f76a8b" index="2" run="2" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="ConstructorThrowsArgumentException661"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="7" atot="47"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="stmt">null</value>
<value name="moduleName">&quot;&quot;</value>
<code><![CDATA[CodeGenOld codeGenOld;
codeGenOld = this.Constructor((ParseTreeNode)null, "");
]]></code>
<methodCode imports="Irony.Parsing;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenOldTest))]
[PexRaisedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException661()
{
    CodeGenOld codeGenOld;
    codeGenOld = this.Constructor((ParseTreeNode)null, "");
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentException" source="mscorlib"><message><![CDATA[String cannot have zero length.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentException" token="2000092" namespace="System"/>
</type>
<value name="paramName"/>
<stackTrace><frame value="  at AssemblyName..ctor(String)" method="AssemblyName..ctor(String)" offset="52"><method assemblyName="mscorlib" name=".ctor" token="600269e"><declaringType assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="assemblyName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CodeGenOld..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs(113)" method="CodeGenOld..ctor(ParseTreeNode, String)" offset="58" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGenOld.cs" line="113"><method assemblyName="IronTuring" name=".ctor" token="6000001"><declaringType assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            throw new System.Exception("can only output into current directory!");
        }
]]></beforeSource>
<source><![CDATA[        AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[        AssemblyBuilder asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
        ModuleBuilder modb = asmb.DefineDynamicModule(moduleName);
        mainProgram = modb.DefineType("Program");]]></afterSource>
</frame>
<frame value="  at CodeGenOldTest.Constructor(ParseTreeNode, String)" method="CodeGenOldTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000001"><declaringType assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenOldTest" token="2000002" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGenOld" token="2000002" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return !string.IsNullOrEmpty(moduleName);
]]></pathCondition>
</generatedTest>
<test name="Constructor" state="success" duration="0.01"/>
<coverage domain="usercodeundertest" unit="block" covered="7" total="47" coveredRatio="0.14893617021276595"/>
<sourceCoverage xml="cov\e292\cov.xml" html="cov\e292\cov.html"/>
<result name="Constructor(ParseTreeNode, String)" state="success" duration="4.8467614850119"/>
<duration start="2012-12-24 20:10:13Z" end="2012-12-24 20:10:18Z" seconds="4.9802849"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="7" total="47" coveredRatio="0.14893617021276595"/>
<sourceCoverage xml="cov\t556\cov.xml" html="cov\t556\cov.html"/>
<duration start="2012-12-24 20:10:13Z" end="2012-12-24 20:10:18Z" seconds="5.1632953"/>
</fixture>
<fixture name="CodeGenTest" type="IronTuring.CodeGenTest" typeName="CodeGenTest" token="2000003" href="fix\IronTuring.Tests.951.html"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
<settings typeUnderTest="IronTuring.CodeGen"/>
<exploration shortName="Constructor(ParseTreeNode, String)" fullName="IronTuring.CodeGenTest.Constructor(ParseTreeNode, String)" isDynamicCode="true"><method><definition assemblyName="IronTuring.Tests" name="Constructor" token="6000003"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<uninstrumented testability="true" methodDisplayName="System.String System.IO.Path.GetFileName(System.String path)" declaringTypeDisplayName="System.IO.Path" methodShortDisplayName="Path.GetFileName(String)" wikiTopic="Testability Issue"><method><definition assemblyName="mscorlib" name="GetFileName" static="true" token="60041fb"><declaringType assemblyName="mscorlib" name="Path" token="2000709" namespace="System.IO"/>
<parameter name="path" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at CodeGen..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(20)" method="CodeGen..ctor(ParseTreeNode, String)" offset="9" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="20"><method assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        public CodeGen(ParseTreeNode stmt, string moduleName)
        {]]></beforeSource>
<source><![CDATA[            if (Path.GetFileName(moduleName) != moduleName)]]></source>
<afterSource><![CDATA[            {
                throw new System.Exception("can only output into current directory!");
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.Constructor(ParseTreeNode, String)" method="CodeGenTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000003"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented testability="true" methodDisplayName="System.String System.IO.Path.GetFileNameWithoutExtension(System.String path)" declaringTypeDisplayName="System.IO.Path" methodShortDisplayName="Path.GetFileNameWithoutExtension(String)" wikiTopic="Testability Issue"><method><definition assemblyName="mscorlib" name="GetFileNameWithoutExtension" static="true" token="60041fc"><declaringType assemblyName="mscorlib" name="Path" token="2000709" namespace="System.IO"/>
<parameter name="path" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at CodeGen..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(25)" method="CodeGen..ctor(ParseTreeNode, String)" offset="47" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="25"><method assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[                throw new System.Exception("can only output into current directory!");
            }
]]></beforeSource>
<source><![CDATA[            AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[            
            asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
            ]]></afterSource>
</frame>
<frame value="  at CodeGenTest.Constructor(ParseTreeNode, String)" method="CodeGenTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000003"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</uninstrumented>
<test name="Constructor" state="success" duration="0.04"/>
<generatedTest id="c6a7f04f-e0c2-4ff5-8c3c-5b00d936067a" index="1" run="1" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="ConstructorThrowsArgumentNullException108"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="38" acov="6" atot="38"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="stmt">null</value>
<value name="moduleName">null</value>
<code><![CDATA[CodeGen codeGen;
codeGen = this.Constructor((ParseTreeNode)null, (string)null);
]]></code>
<methodCode imports="Irony.Parsing;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException108()
{
    CodeGen codeGen;
    codeGen = this.Constructor((ParseTreeNode)null, (string)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentNullException" source="mscorlib"><message><![CDATA[Value cannot be null.
Parameter name: assemblyName]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentNullException" token="2000093" namespace="System"/>
</type>
<value name="paramName">assemblyName</value>
<stackTrace><frame value="  at AssemblyName..ctor(String)" method="AssemblyName..ctor(String)" offset="19"><method assemblyName="mscorlib" name=".ctor" token="600269e"><declaringType assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="assemblyName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CodeGen..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(25)" method="CodeGen..ctor(ParseTreeNode, String)" offset="47" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="25"><method assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[                throw new System.Exception("can only output into current directory!");
            }
]]></beforeSource>
<source><![CDATA[            AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[            
            asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
            ]]></afterSource>
</frame>
<frame value="  at CodeGenTest.Constructor(ParseTreeNode, String)" method="CodeGenTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000003"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return moduleName == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-12-24 20:10:18Z" category="coverage" message="coverage increased from 0 to 6 blocks (+6) after flipping IronTuring.CodeGen..ctor at 0x001b"/>
<test name="Constructor" state="success" duration="0.00"/>
<generatedTest id="27536f52-475a-4f50-85a2-a6d74f6c5d0b" index="2" run="2" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="ConstructorThrowsArgumentException980"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="6" atot="38"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="stmt">null</value>
<value name="moduleName">&quot;&quot;</value>
<code><![CDATA[CodeGen codeGen;
codeGen = this.Constructor((ParseTreeNode)null, "");
]]></code>
<methodCode imports="Irony.Parsing;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException980()
{
    CodeGen codeGen;
    codeGen = this.Constructor((ParseTreeNode)null, "");
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentException" source="mscorlib"><message><![CDATA[String cannot have zero length.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentException" token="2000092" namespace="System"/>
</type>
<value name="paramName"/>
<stackTrace><frame value="  at AssemblyName..ctor(String)" method="AssemblyName..ctor(String)" offset="52"><method assemblyName="mscorlib" name=".ctor" token="600269e"><declaringType assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="AssemblyName" token="2000400" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="assemblyName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CodeGen..ctor(ParseTreeNode, String) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(25)" method="CodeGen..ctor(ParseTreeNode, String)" offset="47" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="25"><method assemblyName="IronTuring" name=".ctor" token="600000f"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[                throw new System.Exception("can only output into current directory!");
            }
]]></beforeSource>
<source><![CDATA[            AssemblyName name = new AssemblyName(Path.GetFileNameWithoutExtension(moduleName));]]></source>
<afterSource><![CDATA[            
            asmb = System.AppDomain.CurrentDomain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Save);
            ]]></afterSource>
</frame>
<frame value="  at CodeGenTest.Constructor(ParseTreeNode, String)" method="CodeGenTest.Constructor(ParseTreeNode, String)" offset="2"><method assemblyName="IronTuring.Tests" name="Constructor" token="6000003"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="stmt" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="moduleName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return !string.IsNullOrEmpty(moduleName);
]]></pathCondition>
</generatedTest>
<test name="Constructor" state="success" duration="0.00"/>
<coverage domain="usercodeundertest" unit="block" covered="6" total="38" coveredRatio="0.15789473684210525"/>
<sourceCoverage xml="cov\e321\cov.xml" html="cov\e321\cov.html"/>
<result name="Constructor(ParseTreeNode, String)" state="success" duration="0.22"/>
<duration start="2012-12-24 20:10:18Z" end="2012-12-24 20:10:18Z" seconds="0.22"/>
</exploration>
<exploration shortName="TypeOfExpr(ParseTreeNode, SymbolTable)" fullName="IronTuring.CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" isDynamicCode="true"><method><definition assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</memberUnderTest>
<test name="TypeOfExpr" state="success" duration="0.08"/>
<generatedTest id="8f567543-3a39-49ba-bb7d-7289da8c191f" index="1" run="1" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException141"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="90" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">null</value>
<value name="symbolTable">null</value>
<code><![CDATA[Type type;
type = this.TypeOfExpr((ParseTreeNode)null, (SymbolTable)null);
]]></code>
<methodCode imports="System;Irony.Parsing;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException141()
{
    Type type;
    type = this.TypeOfExpr((ParseTreeNode)null, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="8f567543-3a39-49ba-bb7d-7289da8c191f" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr == (ParseTreeNode)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathCondition><![CDATA[return expr == (ParseTreeNode)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-12-24 20:10:18Z" category="coverage" message="coverage increased from 0 to 1 blocks (+1) after flipping IronTuring.CodeGen.TypeOfExpr at 0x&lt;unknown offset&gt;"/>
<explorable title="guessed how to create Irony.Parsing.ParseTreeNode" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\ParseTreeNodeFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.ParseTreeNode instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="ParseTreeNodeFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.ParseTreeNode instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ParseTreeNodeFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="token_token" position="0"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Token_token1" position="1"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AstNode_o" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Term_bnfTerm" position="3"><type spec="Class"><definition assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Precedence_i" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Associativity_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Span_sourceSpan" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="SourceSpan" token="2000011" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="IsError_b" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="Tag_o1" position="8"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Comments_tokenList" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenList" token="200004d" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="ParseTreeNodeFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ParseTreeNodeFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="token_token" position="0"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Token_token1" position="1"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AstNode_o" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Term_bnfTerm" position="3"><type spec="Class"><definition assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Precedence_i" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Associativity_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Span_sourceSpan" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="SourceSpan" token="2000011" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="IsError_b" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="Tag_o1" position="8"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Comments_tokenList" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenList" token="200004d" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.19"/>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.PreferredActionHint as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="PreferredActionHint" token="200000c" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.BnfExpression as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="BnfExpression" token="2000017" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.TokenPreviewHint as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="TokenPreviewHint" token="2000018" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.Terminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.DataLiteralBase as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="DataLiteralBase" token="2000024" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.FixedLengthLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="FixedLengthLiteral" token="2000025" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.CustomTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="CustomTerminal" token="2000027" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.CommentTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="CommentTerminal" token="2000051" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.CustomActionHint as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="CustomActionHint" token="2000059" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.NewLineTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="NewLineTerminal" token="200005c" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.PrecedenceHint as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="PrecedenceHint" token="2000064" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.RegexBasedTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="RegexBasedTerminal" token="2000065" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.NumberLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="NumberLiteral" token="2000067" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.ConstantTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ConstantTerminal" token="200006b" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.WikiTagTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiTagTerminal" token="200006d" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.ImpliedSymbolTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.RegexLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.DsvLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="DsvLiteral" token="200007b" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.NonTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="NonTerminal" token="2000082" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.LineContinuationTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.IdentifierTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="IdentifierTerminal" token="200008a" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.WikiBlockTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiBlockTerminal" token="200008d" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.KeyTerm as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.StringLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="StringLiteral" token="20000a6" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.WikiTextTerminal as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiTextTerminal" token="20000ac" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.QuotedValueLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="QuotedValueLiteral" token="20000b0" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.ImpliedPrecedenceHint as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ImpliedPrecedenceHint" token="20000b6" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2012-12-24 20:10:19Z" wikiTopic="Usable Type Guessed" category="domains" message="will use Irony.Parsing.FreeTextLiteral as BnfTerm"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</type>
</value>
</argument>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
</log>
<test name="TypeOfExpr" state="success" duration="0.42"/>
<explorable title="guessed how to create Irony.Parsing.Token" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\TokenFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.Token instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="TokenFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.Token instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="TokenFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="term_terminal" position="0"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="location_sourceLocation" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="SourceLocation" token="2000010" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="text_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_o" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="KeyTerm_keyTerm" position="4"><type spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Value_o1" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Details_o2" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenFlags" token="200004b" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="OtherBrace_token1" position="9"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="ScannerState_w" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int16" token="20000fd" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="TokenFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="TokenFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="term_terminal" position="0"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="location_sourceLocation" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="SourceLocation" token="2000010" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="text_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_o" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="KeyTerm_keyTerm" position="4"><type spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Value_o1" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Details_o2" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenFlags" token="200004b" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="OtherBrace_token1" position="9"><type spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="ScannerState_w" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int16" token="20000fd" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="Token" token="200004f" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<test name="TypeOfExpr" state="success" duration="0.15"/>
<explorable title="guessed how to create Irony.Parsing.RegexLiteral" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\RegexLiteralFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.RegexLiteral instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System"/>
<typeDefinition assemblyName="IronTuring.Tests" name="RegexLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.RegexLiteral instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<reference name="System"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="RegexLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol_c" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="escapeSymbol_c1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="10"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="12"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="StartSymbol_c2" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EndSymbol_c3" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EscapeSymbol_c4" position="15"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Switches_regexSwitchTable" position="16"><type spec="Class"><definition assemblyName="Irony" name="RegexSwitchTable" token="200007a"><declaringType assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</definition>
</type>
</parameter>
<parameter name="DefaultOptions_i4_" position="17"><type spec="ValueType"><definition assemblyName="System" valueType="true" name="RegexOptions" token="2000022" namespace="System.Text.RegularExpressions"/>
</type>
</parameter>
<parameter name="Options_i5_" position="18"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="RegexTermOptions" token="2000078" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="19"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="20"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="RegexLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="RegexLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol_c" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="escapeSymbol_c1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="10"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="12"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="StartSymbol_c2" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EndSymbol_c3" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EscapeSymbol_c4" position="15"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Switches_regexSwitchTable" position="16"><type spec="Class"><definition assemblyName="Irony" name="RegexSwitchTable" token="200007a"><declaringType assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</definition>
</type>
</parameter>
<parameter name="DefaultOptions_i4_" position="17"><type spec="ValueType"><definition assemblyName="System" valueType="true" name="RegexOptions" token="2000022" namespace="System.Text.RegularExpressions"/>
</type>
</parameter>
<parameter name="Options_i5_" position="18"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="RegexTermOptions" token="2000078" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="19"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="20"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.LineContinuationTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\LineContinuationTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.LineContinuationTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="LineContinuationTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.LineContinuationTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="LineContinuationTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startSymbols_ss" position="1"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="StartSymbols_stringList" position="12"><type spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</type>
</parameter>
<parameter name="LineTerminators_s3" position="13"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="14"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="15"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="LineContinuationTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="LineContinuationTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startSymbols_ss" position="1"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="StartSymbols_stringList" position="12"><type spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</type>
</parameter>
<parameter name="LineTerminators_s3" position="13"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="14"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="15"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.IdentifierTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="IdentifierTerminal" token="200008a" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\IdentifierTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.IdentifierTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="IdentifierTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="IdentifierTerminal" token="200008a" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.IdentifierTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="IdentifierTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="options_w" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="IdOptions" token="2000087" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Escapes_escapeTable" position="13"><type spec="Class"><definition assemblyName="Irony" name="EscapeTable" token="200005d" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseSensitivePrefixesSuffixes_b1_" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="Options_w1" position="15"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="IdOptions" token="2000087" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AllFirstChars_s3" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="AllChars_s4" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="KeywordEditorInfo_tokenEditorInfo1" position="18"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseRestriction_i4_" position="19"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="CaseRestriction" token="2000088" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="20"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="21"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="IdentifierTerminal" token="200008a" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="IdentifierTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="IdentifierTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="options_w" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="IdOptions" token="2000087" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Escapes_escapeTable" position="13"><type spec="Class"><definition assemblyName="Irony" name="EscapeTable" token="200005d" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseSensitivePrefixesSuffixes_b1_" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="Options_w1" position="15"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="IdOptions" token="2000087" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AllFirstChars_s3" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="AllChars_s4" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="KeywordEditorInfo_tokenEditorInfo1" position="18"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseRestriction_i4_" position="19"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="CaseRestriction" token="2000088" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="20"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="21"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="IdentifierTerminal" token="200008a" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<explorable title="guessed how to create Irony.Parsing.ConstantTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="ConstantTerminal" token="200006b" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\ConstantTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.ConstantTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="ConstantTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ConstantTerminal" token="200006b" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.ConstantTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ConstantTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="nodeType_type" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="12"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ConstantTerminal" token="200006b" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="ConstantTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ConstantTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="nodeType_type" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="12"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ConstantTerminal" token="200006b" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<staticFieldStore fieldDisplayName="Irony.Parsing.BnfTerm._hashCounter" declaringTypeDisplayName="Irony.Parsing.BnfTerm" fieldShortDisplayName="_hashCounter" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="Irony" name="_hashCounter" static="true" token="400003c"><declaringType assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at BnfTerm..ctor(String, String) in C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Grammar\BnfTerm.cs(77)" method="BnfTerm..ctor(String, String)" offset="45" file="C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Grammar\BnfTerm.cs" line="77"><method assemblyName="Irony" name=".ctor" token="600002d"><declaringType assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="errorAlias" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at BnfTerm..ctor(String) in C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Grammar\BnfTerm.cs(67)" method="BnfTerm..ctor(String)" offset="3" file="C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Grammar\BnfTerm.cs" line="67"><method assemblyName="Irony" name=".ctor" token="600002a"><declaringType assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Irony" name="BnfTerm" token="200000a" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Terminal..ctor(String, TokenCategory, TermFlags) in C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\_Terminal.cs(34)" method="Terminal..ctor(String, TokenCategory, TermFlags)" offset="20" file="C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\_Terminal.cs" line="34"><method assemblyName="Irony" name=".ctor" token="6000106"><declaringType assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="category" position="2"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="flags" position="3"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Terminal..ctor(String) in C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\_Terminal.cs(29)" method="Terminal..ctor(String)" offset="4" file="C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\_Terminal.cs" line="29"><method assemblyName="Irony" name=".ctor" token="6000103"><declaringType assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at RegexLiteral..ctor(String, Char, Char) in C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\RegexLiteral.cs(57)" method="RegexLiteral..ctor(String, Char, Char)" offset="51" file="C:\Users\mirhagk\SkyDrive\programming\Irony_2012_03_15\Irony\Parsing\Terminals\RegexLiteral.cs" line="57"><method assemblyName="Irony" name=".ctor" token="6000264"><declaringType assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="escapeSymbol" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at RegexLiteralFactory.Create(String, Char, Char, Int32, String, String, TermFlags, Associativity, TokenCategory, Int32, TokenEditorInfo, Byte, Terminal, Char, Char, Char, RegexSwitchTable, RegexOptions, RegexTermOptions, AstNodeConfig, GrammarData)" method="RegexLiteralFactory.Create(String, Char, Char, Int32, String, String, TermFlags, Associativity, TokenCategory, Int32, TokenEditorInfo, Byte, Terminal, Char, Char, Char, RegexSwitchTable, RegexOptions, RegexTermOptions, AstNodeConfig, GrammarData)" offset="3"><method assemblyName="Irony.Explorables" name="Create" static="true" token="6000026"><declaringType assemblyName="Irony.Explorables" name="RegexLiteralFactory" token="2000014" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol_c" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="escapeSymbol_c1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="10"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="12"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="StartSymbol_c2" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EndSymbol_c3" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="EscapeSymbol_c4" position="15"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Switches_regexSwitchTable" position="16"><type spec="Class"><definition assemblyName="Irony" name="RegexSwitchTable" token="200007a"><declaringType assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</definition>
</type>
</parameter>
<parameter name="DefaultOptions_i4_" position="17"><type spec="ValueType"><definition assemblyName="System" valueType="true" name="RegexOptions" token="2000022" namespace="System.Text.RegularExpressions"/>
</type>
</parameter>
<parameter name="Options_i5_" position="18"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="RegexTermOptions" token="2000078" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="19"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="20"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="RegexLiteral" token="2000079" namespace="Irony.Parsing"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</staticFieldStore>
<test name="TypeOfExpr" state="success" duration="0.63"/>
<generatedTest id="6b0caa82-9eba-4633-b3ae-8dcaa8b1eb81" index="2" run="10" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException510"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[RegexLiteral regexLiteral;
Token token;
ParseTreeNode parseTreeNode;
Type type;
regexLiteral = new RegexLiteral((string)null, ' ', ' ');
regexLiteral.Precedence = 0;
regexLiteral.Name = (string)null;
regexLiteral.ErrorAlias = (string)null;
regexLiteral.Flags = TermFlags.None;
regexLiteral.Associativity = Associativity.Left;
regexLiteral.Category = TokenCategory.Content;
regexLiteral.Priority = 0;
regexLiteral.EditorInfo = (TokenEditorInfo)null;
regexLiteral.MultilineIndex = (byte)0;
regexLiteral.IsPairFor = (Terminal)null;
regexLiteral.StartSymbol = '@';
regexLiteral.EndSymbol = ' ';
regexLiteral.EscapeSymbol = ' ';
regexLiteral.Switches = (RegexLiteral.RegexSwitchTable)null;
regexLiteral.DefaultOptions = RegexOptions.None;
regexLiteral.Options = RegexTermOptions.None;
((BnfTerm)regexLiteral).AstConfig = (AstNodeConfig)null;
regexLiteral.Init((GrammarData)null);
token = new Token((Terminal)regexLiteral, default(SourceLocation), 
                  (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;System.Text.RegularExpressions;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException510()
{
    RegexLiteral regexLiteral;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    regexLiteral = new RegexLiteral((string)null, ' ', ' ');
    regexLiteral.Precedence = 0;
    regexLiteral.Name = (string)null;
    regexLiteral.ErrorAlias = (string)null;
    regexLiteral.Flags = TermFlags.None;
    regexLiteral.Associativity = Associativity.Left;
    regexLiteral.Category = TokenCategory.Content;
    regexLiteral.Priority = 0;
    regexLiteral.EditorInfo = (TokenEditorInfo)null;
    regexLiteral.MultilineIndex = (byte)0;
    regexLiteral.IsPairFor = (Terminal)null;
    regexLiteral.StartSymbol = '@';
    regexLiteral.EndSymbol = ' ';
    regexLiteral.EscapeSymbol = ' ';
    regexLiteral.Switches = (RegexLiteral.RegexSwitchTable)null;
    regexLiteral.DefaultOptions = RegexOptions.None;
    regexLiteral.Options = RegexTermOptions.None;
    ((BnfTerm)regexLiteral).AstConfig = (AstNodeConfig)null;
    regexLiteral.Init((GrammarData)null);
    token = new Token((Terminal)regexLiteral, default(SourceLocation), 
                      (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="6b0caa82-9eba-4633-b3ae-8dcaa8b1eb81" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[RegexLiteral s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && token_token != (Token)null && token_token == (Token)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-12-24 20:10:26Z" category="progress" message="   10 runs, 1/90 blocks covered"/>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<test name="TypeOfExpr" state="success" duration="0.30"/>
<test name="TypeOfExpr" state="success" duration="0.20"/>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.04"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<explorable title="guessed how to create Irony.StringList" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\StringListFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.StringList instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="StringListFactory" token="ffffffff" namespace="Irony"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.StringList instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringListFactory" token="ffffffff" namespace="Irony"/>
<parameter name="args_ss" position="0"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="StringListFactory" token="ffffffff" namespace="Irony"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringListFactory" token="ffffffff" namespace="Irony"/>
<parameter name="args_ss" position="0"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringList" token="2000046" namespace="Irony"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.WikiTagTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="WikiTagTerminal" token="200006d" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\WikiTagTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.WikiTagTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="WikiTagTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiTagTerminal" token="200006d" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.WikiTagTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiTagTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="termType_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="WikiTermType" token="2000028" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="openTag_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="closeTag_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="htmlElementName_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i1_" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s4" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s5" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="10"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="12"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="14"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s6" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s7" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s8" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s9" position="18"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s10" position="19"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s11" position="20"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="21"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="22"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiTagTerminal" token="200006d" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="WikiTagTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiTagTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="termType_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="WikiTermType" token="2000028" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="openTag_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="closeTag_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="htmlElementName_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i1_" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s4" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s5" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="10"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="12"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="14"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s6" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s7" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s8" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s9" position="18"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s10" position="19"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s11" position="20"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="21"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="22"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiTagTerminal" token="200006d" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<generatedTest id="e2b76459-20e1-49e6-b601-28ef9537f291" index="3" run="22" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException354"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[WikiTagTerminal wikiTagTerminal;
Token token;
ParseTreeNode parseTreeNode;
Type type;
wikiTagTerminal = new WikiTagTerminal
                      ((string)null, WikiTermType.Text, "", (string)null, (string)null);
wikiTagTerminal.Precedence = 0;
wikiTagTerminal.Name = (string)null;
wikiTagTerminal.ErrorAlias = (string)null;
wikiTagTerminal.Flags = TermFlags.None;
wikiTagTerminal.Associativity = Associativity.Left;
wikiTagTerminal.Category = TokenCategory.Content;
wikiTagTerminal.Priority = 0;
wikiTagTerminal.EditorInfo = (TokenEditorInfo)null;
wikiTagTerminal.MultilineIndex = (byte)0;
wikiTagTerminal.IsPairFor = (Terminal)null;
wikiTagTerminal.HtmlElementName = (string)null;
wikiTagTerminal.ContainerHtmlElementName = (string)null;
wikiTagTerminal.OpenHtmlTag = (string)null;
wikiTagTerminal.CloseHtmlTag = (string)null;
wikiTagTerminal.ContainerOpenHtmlTag = (string)null;
wikiTagTerminal.ContainerCloseHtmlTag = (string)null;
((BnfTerm)wikiTagTerminal).AstConfig = (AstNodeConfig)null;
((WikiTerminalBase)wikiTagTerminal).Init((GrammarData)null);
token = new Token((Terminal)wikiTagTerminal, default(SourceLocation), 
                  (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException354()
{
    WikiTagTerminal wikiTagTerminal;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    wikiTagTerminal = new WikiTagTerminal
                          ((string)null, WikiTermType.Text, "", (string)null, (string)null);
    wikiTagTerminal.Precedence = 0;
    wikiTagTerminal.Name = (string)null;
    wikiTagTerminal.ErrorAlias = (string)null;
    wikiTagTerminal.Flags = TermFlags.None;
    wikiTagTerminal.Associativity = Associativity.Left;
    wikiTagTerminal.Category = TokenCategory.Content;
    wikiTagTerminal.Priority = 0;
    wikiTagTerminal.EditorInfo = (TokenEditorInfo)null;
    wikiTagTerminal.MultilineIndex = (byte)0;
    wikiTagTerminal.IsPairFor = (Terminal)null;
    wikiTagTerminal.HtmlElementName = (string)null;
    wikiTagTerminal.ContainerHtmlElementName = (string)null;
    wikiTagTerminal.OpenHtmlTag = (string)null;
    wikiTagTerminal.CloseHtmlTag = (string)null;
    wikiTagTerminal.ContainerOpenHtmlTag = (string)null;
    wikiTagTerminal.ContainerCloseHtmlTag = (string)null;
    ((BnfTerm)wikiTagTerminal).AstConfig = (AstNodeConfig)null;
    ((WikiTerminalBase)wikiTagTerminal).Init((GrammarData)null);
    token = new Token((Terminal)wikiTagTerminal, default(SourceLocation), 
                      (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="e2b76459-20e1-49e6-b601-28ef9537f291" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[WikiTagTerminal s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && 
                                        expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && token_token != (Token)null && token_token == (Token)s0 && term_terminal.GetType() != typeof(RegexLiteral) && 
                                                                                                                                                              term_terminal.GetType() != typeof(LineContinuationTerminal) && term_terminal.GetType() != typeof(IdentifierTerminal) && term_terminal.GetType() != typeof(ConstantTerminal);
]]></pathAssumption>
<pathCondition><![CDATA[return openTag_s1 != (string)null && string.IsNullOrEmpty(HtmlElementName_s6) && string.IsNullOrEmpty(ContainerHtmlElementName_s7) && text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<test name="TypeOfExpr" state="success" duration="0.04"/>
<generatedTest id="e8583b7e-1d65-4472-94bf-818928f87b84" index="4" run="23" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException127"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[WikiTagTerminal wikiTagTerminal;
Token token;
ParseTreeNode parseTreeNode;
Type type;
wikiTagTerminal = new WikiTagTerminal
                      ((string)null, WikiTermType.Text, "\0", (string)null, (string)null);
wikiTagTerminal.Precedence = 0;
wikiTagTerminal.Name = (string)null;
wikiTagTerminal.ErrorAlias = (string)null;
wikiTagTerminal.Flags = TermFlags.None;
wikiTagTerminal.Associativity = Associativity.Left;
wikiTagTerminal.Category = TokenCategory.Content;
wikiTagTerminal.Priority = 0;
wikiTagTerminal.EditorInfo = (TokenEditorInfo)null;
wikiTagTerminal.MultilineIndex = (byte)0;
wikiTagTerminal.IsPairFor = (Terminal)null;
wikiTagTerminal.HtmlElementName = (string)null;
wikiTagTerminal.ContainerHtmlElementName = "\0";
wikiTagTerminal.OpenHtmlTag = (string)null;
wikiTagTerminal.CloseHtmlTag = (string)null;
wikiTagTerminal.ContainerOpenHtmlTag = (string)null;
wikiTagTerminal.ContainerCloseHtmlTag = (string)null;
((BnfTerm)wikiTagTerminal).AstConfig = (AstNodeConfig)null;
((WikiTerminalBase)wikiTagTerminal).Init((GrammarData)null);
token = new Token((Terminal)wikiTagTerminal, default(SourceLocation), 
                  (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException127()
{
    WikiTagTerminal wikiTagTerminal;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    wikiTagTerminal = new WikiTagTerminal
                          ((string)null, WikiTermType.Text, "\0", (string)null, (string)null);
    wikiTagTerminal.Precedence = 0;
    wikiTagTerminal.Name = (string)null;
    wikiTagTerminal.ErrorAlias = (string)null;
    wikiTagTerminal.Flags = TermFlags.None;
    wikiTagTerminal.Associativity = Associativity.Left;
    wikiTagTerminal.Category = TokenCategory.Content;
    wikiTagTerminal.Priority = 0;
    wikiTagTerminal.EditorInfo = (TokenEditorInfo)null;
    wikiTagTerminal.MultilineIndex = (byte)0;
    wikiTagTerminal.IsPairFor = (Terminal)null;
    wikiTagTerminal.HtmlElementName = (string)null;
    wikiTagTerminal.ContainerHtmlElementName = "\0";
    wikiTagTerminal.OpenHtmlTag = (string)null;
    wikiTagTerminal.CloseHtmlTag = (string)null;
    wikiTagTerminal.ContainerOpenHtmlTag = (string)null;
    wikiTagTerminal.ContainerCloseHtmlTag = (string)null;
    ((BnfTerm)wikiTagTerminal).AstConfig = (AstNodeConfig)null;
    ((WikiTerminalBase)wikiTagTerminal).Init((GrammarData)null);
    token = new Token((Terminal)wikiTagTerminal, default(SourceLocation), 
                      (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="e8583b7e-1d65-4472-94bf-818928f87b84" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[WikiTagTerminal s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && 
                                        expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && token_token != (Token)null && token_token == (Token)s0 && term_terminal.GetType() != typeof(RegexLiteral) && 
                                                                                                                                                              term_terminal.GetType() != typeof(LineContinuationTerminal) && term_terminal.GetType() != typeof(IdentifierTerminal) && term_terminal.GetType() != typeof(ConstantTerminal);
]]></pathAssumption>
<pathCondition><![CDATA[return openTag_s1 != (string)null && string.IsNullOrEmpty(HtmlElementName_s6) && ContainerHtmlElementName_s7.Length != 0 && string.IsNullOrEmpty(ContainerOpenHtmlTag_s10) && 
                                                                                                                            ContainerHtmlElementName_s7 != (string)null && string.IsNullOrEmpty(ContainerCloseHtmlTag_s11) && text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<log level="message" time="2012-12-24 20:10:38Z" category="progress" message="   24 runs, 1/90 blocks covered"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.ImpliedSymbolTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\ImpliedSymbolTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.ImpliedSymbolTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="ImpliedSymbolTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.ImpliedSymbolTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ImpliedSymbolTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="4"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="10"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="11"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="12"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="ImpliedSymbolTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="ImpliedSymbolTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="4"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="10"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="11"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="12"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<explorable title="guessed how to create Irony.Parsing.GrammarData" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GrammarDataFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.GrammarData instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System.Core"/>
<reference name="System"/>
<typeDefinition assemblyName="IronTuring.Tests" name="GrammarDataFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.GrammarData instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<reference name="System.Core"/>
<reference name="System"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="GrammarDataFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="language_languageData" position="0"><type spec="Class"><definition assemblyName="Irony" name="LanguageData" token="20000ab" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AugmentedRoot_nonTerminal" position="1"><type spec="Class"><definition assemblyName="Irony" name="NonTerminal" token="2000082" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AugmentedSnippetRoots_nonTerminalSet" position="2"><type spec="Class"><definition assemblyName="Irony" name="NonTerminalSet" token="2000084" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="NoPrefixTerminals_terminalSet" position="3"><type spec="Class"><definition assemblyName="Irony" name="TerminalSet" token="2000095" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="GrammarDataFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="GrammarDataFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="language_languageData" position="0"><type spec="Class"><definition assemblyName="Irony" name="LanguageData" token="20000ab" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AugmentedRoot_nonTerminal" position="1"><type spec="Class"><definition assemblyName="Irony" name="NonTerminal" token="2000082" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AugmentedSnippetRoots_nonTerminalSet" position="2"><type spec="Class"><definition assemblyName="Irony" name="NonTerminalSet" token="2000084" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="NoPrefixTerminals_terminalSet" position="3"><type spec="Class"><definition assemblyName="Irony" name="TerminalSet" token="2000095" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.WikiTextTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="WikiTextTerminal" token="20000ac" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\WikiTextTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.WikiTextTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="WikiTextTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiTextTerminal" token="20000ac" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.WikiTextTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiTextTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="4"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="10"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s3" position="11"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s4" position="12"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s5" position="13"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s6" position="14"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s7" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s8" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="17"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="18"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="19"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiTextTerminal" token="20000ac" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="WikiTextTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiTextTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="4"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="8"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="10"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s3" position="11"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s4" position="12"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s5" position="13"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s6" position="14"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s7" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s8" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="17"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="18"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="19"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiTextTerminal" token="20000ac" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.FreeTextLiteral" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\FreeTextLiteralFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.FreeTextLiteral instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System.Core"/>
<reference name="System"/>
<typeDefinition assemblyName="IronTuring.Tests" name="FreeTextLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.FreeTextLiteral instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<reference name="System.Core"/>
<reference name="System"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="FreeTextLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="freeTextOptions_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="FreeTextOptions" token="20000bb" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="terminators_ss" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="Precedence_i1_" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="10"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="12"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Terminators_stringSet" position="13"><type spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</type>
</parameter>
<parameter name="Firsts_stringSet1" position="14"><type spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</type>
</parameter>
<parameter name="Escapes_stringDictionary" position="15"><type spec="Class"><definition assemblyName="Irony" name="StringDictionary" token="2000041" namespace="Irony"/>
</type>
</parameter>
<parameter name="FreeTextOptions_i1" position="16"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="FreeTextOptions" token="20000bb" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="17"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="18"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="FreeTextLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="FreeTextLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="freeTextOptions_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="FreeTextOptions" token="20000bb" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="terminators_ss" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="Precedence_i1_" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="10"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="12"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Terminators_stringSet" position="13"><type spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</type>
</parameter>
<parameter name="Firsts_stringSet1" position="14"><type spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</type>
</parameter>
<parameter name="Escapes_stringDictionary" position="15"><type spec="Class"><definition assemblyName="Irony" name="StringDictionary" token="2000041" namespace="Irony"/>
</type>
</parameter>
<parameter name="FreeTextOptions_i1" position="16"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="FreeTextOptions" token="20000bb" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="17"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="18"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.08"/>
<test name="TypeOfExpr" state="success" duration="0.06"/>
<explorable title="guessed how to create Irony.StringSet" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\StringSetFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.StringSet instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System.Core"/>
<reference name="System"/>
<typeDefinition assemblyName="IronTuring.Tests" name="StringSetFactory" token="ffffffff" namespace="Irony"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.StringSet instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="System.Core"/>
<reference name="mscorlib"/>
<reference name="System"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringSetFactory" token="ffffffff" namespace="Irony"/>
<parameter name="comparer_stringComparer" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="StringComparer" token="2000053" namespace="System"/>
</type>
</parameter>
<parameter name="other_iEnumerable" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="StringSetFactory" token="ffffffff" namespace="Irony"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringSetFactory" token="ffffffff" namespace="Irony"/>
<parameter name="comparer_stringComparer" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="StringComparer" token="2000053" namespace="System"/>
</type>
</parameter>
<parameter name="other_iEnumerable" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringSet" token="2000045" namespace="Irony"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<test name="TypeOfExpr" state="success" duration="0.07"/>
<test name="TypeOfExpr" state="success" duration="0.03"/>
<explorable title="guessed how to create Irony.Parsing.WikiBlockTerminal" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="WikiBlockTerminal" token="200008d" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\WikiBlockTerminalFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.WikiBlockTerminal instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="WikiBlockTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="WikiBlockTerminal" token="200008d" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.WikiBlockTerminal instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiBlockTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="blockType_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="WikiBlockType" token="200008c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="openTag_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="closeTag_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="htmlElementName_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i1_" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s4" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s5" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="10"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="12"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="14"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s6" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s7" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s8" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s9" position="18"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s10" position="19"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s11" position="20"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="21"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="22"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiBlockTerminal" token="200008d" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="WikiBlockTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="WikiBlockTerminalFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="blockType_i" position="1"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="WikiBlockType" token="200008c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="openTag_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="closeTag_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="htmlElementName_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i1_" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s4" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s5" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i4_" position="10"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1_1" position="11"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="12"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="13"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="14"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="HtmlElementName_s6" position="15"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerHtmlElementName_s7" position="16"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="OpenHtmlTag_s8" position="17"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="CloseHtmlTag_s9" position="18"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerOpenHtmlTag_s10" position="19"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ContainerCloseHtmlTag_s11" position="20"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="21"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="22"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="WikiBlockTerminal" token="200008d" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.22"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<generatedTest id="08031054-e729-4610-b821-c97b4cc35212" index="5" run="42" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException308"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[WikiBlockTerminal wikiBlockTerminal;
Token token;
ParseTreeNode parseTreeNode;
Type type;
wikiBlockTerminal = new WikiBlockTerminal
                        ((string)null, WikiBlockType.EscapedText, "", (string)null, (string)null);
wikiBlockTerminal.Precedence = 0;
wikiBlockTerminal.Name = (string)null;
wikiBlockTerminal.ErrorAlias = (string)null;
wikiBlockTerminal.Flags = TermFlags.None;
wikiBlockTerminal.Associativity = Associativity.Left;
wikiBlockTerminal.Category = TokenCategory.Content;
wikiBlockTerminal.Priority = 0;
wikiBlockTerminal.EditorInfo = (TokenEditorInfo)null;
wikiBlockTerminal.MultilineIndex = (byte)0;
wikiBlockTerminal.IsPairFor = (Terminal)null;
wikiBlockTerminal.HtmlElementName = (string)null;
wikiBlockTerminal.ContainerHtmlElementName = (string)null;
wikiBlockTerminal.OpenHtmlTag = (string)null;
wikiBlockTerminal.CloseHtmlTag = (string)null;
wikiBlockTerminal.ContainerOpenHtmlTag = (string)null;
wikiBlockTerminal.ContainerCloseHtmlTag = (string)null;
((BnfTerm)wikiBlockTerminal).AstConfig = (AstNodeConfig)null;
((WikiTerminalBase)wikiBlockTerminal).Init((GrammarData)null);
token = new Token((Terminal)wikiBlockTerminal, default(SourceLocation), 
                  (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException308()
{
    WikiBlockTerminal wikiBlockTerminal;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    wikiBlockTerminal = new WikiBlockTerminal
                            ((string)null, WikiBlockType.EscapedText, "", (string)null, (string)null);
    wikiBlockTerminal.Precedence = 0;
    wikiBlockTerminal.Name = (string)null;
    wikiBlockTerminal.ErrorAlias = (string)null;
    wikiBlockTerminal.Flags = TermFlags.None;
    wikiBlockTerminal.Associativity = Associativity.Left;
    wikiBlockTerminal.Category = TokenCategory.Content;
    wikiBlockTerminal.Priority = 0;
    wikiBlockTerminal.EditorInfo = (TokenEditorInfo)null;
    wikiBlockTerminal.MultilineIndex = (byte)0;
    wikiBlockTerminal.IsPairFor = (Terminal)null;
    wikiBlockTerminal.HtmlElementName = (string)null;
    wikiBlockTerminal.ContainerHtmlElementName = (string)null;
    wikiBlockTerminal.OpenHtmlTag = (string)null;
    wikiBlockTerminal.CloseHtmlTag = (string)null;
    wikiBlockTerminal.ContainerOpenHtmlTag = (string)null;
    wikiBlockTerminal.ContainerCloseHtmlTag = (string)null;
    ((BnfTerm)wikiBlockTerminal).AstConfig = (AstNodeConfig)null;
    ((WikiTerminalBase)wikiBlockTerminal).Init((GrammarData)null);
    token = new Token((Terminal)wikiBlockTerminal, default(SourceLocation), 
                      (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="08031054-e729-4610-b821-c97b4cc35212" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[WikiBlockTerminal s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && 
                                                                                                        token_token != (Token)null && token_token == (Token)s0 && term_terminal.GetType() != typeof(RegexLiteral) && term_terminal.GetType() != typeof(LineContinuationTerminal) && 
                                                                                                                                                                                                                     term_terminal.GetType() != typeof(IdentifierTerminal) && term_terminal.GetType() != typeof(ConstantTerminal) && term_terminal.GetType() != typeof(WikiTagTerminal) && 
                                                                                                                                                                                                                                                                                                                                     term_terminal.GetType() != typeof(ImpliedSymbolTerminal) && term_terminal.GetType() != typeof(WikiTextTerminal) && term_terminal.GetType() != typeof(FreeTextLiteral);
]]></pathAssumption>
<pathCondition><![CDATA[return openTag_s1 != (string)null && string.IsNullOrEmpty(HtmlElementName_s6) && string.IsNullOrEmpty(ContainerHtmlElementName_s7) && text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<test name="TypeOfExpr" state="success" duration="0.02"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<log level="message" time="2012-12-24 20:10:53Z" category="progress" message="   44 runs (31.82 % retries), 1/90 blocks covered"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.KeyTerm" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\KeyTermFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.KeyTerm instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="KeyTermFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.KeyTerm instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="KeyTermFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="text_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AllowAlphaAfterKeyword_b1_" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="13"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="14"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="KeyTermFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="KeyTermFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="text_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Precedence_i" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s3" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="5"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="6"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="9"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="11"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="AllowAlphaAfterKeyword_b1_" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="value_astNodeConfig" position="13"><type spec="Class"><definition assemblyName="Irony" name="AstNodeConfig" token="2000092" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="14"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="KeyTerm" token="20000a3" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.07"/>
<test name="TypeOfExpr" state="success" duration="0.00"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<generatedTest id="469fb0e9-4a96-46bb-99b5-231c060be97f" index="6" run="52" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException254"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[KeyTerm keyTerm;
Token token;
ParseTreeNode parseTreeNode;
Type type;
keyTerm = new KeyTerm("", (string)null);
keyTerm.Precedence = 0;
keyTerm.Name = (string)null;
keyTerm.ErrorAlias = (string)null;
keyTerm.Flags = TermFlags.None;
keyTerm.Associativity = Associativity.Left;
keyTerm.Category = TokenCategory.Content;
keyTerm.Priority = 0;
keyTerm.EditorInfo = (TokenEditorInfo)null;
keyTerm.MultilineIndex = (byte)0;
keyTerm.IsPairFor = (Terminal)null;
keyTerm.AllowAlphaAfterKeyword = false;
((BnfTerm)keyTerm).AstConfig = (AstNodeConfig)null;
keyTerm.Init((GrammarData)null);
token = new Token
            ((Terminal)keyTerm, default(SourceLocation), (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException254()
{
    KeyTerm keyTerm;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    keyTerm = new KeyTerm("", (string)null);
    keyTerm.Precedence = 0;
    keyTerm.Name = (string)null;
    keyTerm.ErrorAlias = (string)null;
    keyTerm.Flags = TermFlags.None;
    keyTerm.Associativity = Associativity.Left;
    keyTerm.Category = TokenCategory.Content;
    keyTerm.Priority = 0;
    keyTerm.EditorInfo = (TokenEditorInfo)null;
    keyTerm.MultilineIndex = (byte)0;
    keyTerm.IsPairFor = (Terminal)null;
    keyTerm.AllowAlphaAfterKeyword = false;
    ((BnfTerm)keyTerm).AstConfig = (AstNodeConfig)null;
    keyTerm.Init((GrammarData)null);
    token = new Token
                ((Terminal)keyTerm, default(SourceLocation), (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="469fb0e9-4a96-46bb-99b5-231c060be97f" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[KeyTerm s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && token_token != (Token)null && token_token == (Token)s0 && 
                                                                                                                                                                     term_terminal.GetType() != typeof(RegexLiteral) && term_terminal.GetType() != typeof(LineContinuationTerminal) && term_terminal.GetType() != typeof(IdentifierTerminal) && 
                                                                                                                                                                                                                                                                                       term_terminal.GetType() != typeof(ConstantTerminal) && term_terminal.GetType() != typeof(WikiTagTerminal) && term_terminal.GetType() != typeof(ImpliedSymbolTerminal) && 
                                                                                                                                                                                                                                                                                                                                                                                                    term_terminal.GetType() != typeof(WikiTextTerminal) && term_terminal.GetType() != typeof(FreeTextLiteral) && term_terminal.GetType() != typeof(WikiBlockTerminal);
]]></pathAssumption>
<pathCondition><![CDATA[return text_s != (string)null && ((TermFlags)(-129) | TermFlags.IsReservedWord ^ Flags_i1_) == (TermFlags)(-1) && EditorInfo_tokenEditorInfo == (TokenEditorInfo)null && 
                                                                                                                  ((TermFlags)(-2) | TermFlags.IsOperator ^ Flags_i1_) == (TermFlags)(-1) && ((TermFlags)(-97) | (TermFlags.IsPunctuation | TermFlags.IsDelimiter) ^ Flags_i1_) == (TermFlags)(-1) && 
                                                                                                                                                                                             ((TermFlags)(-7) | TermFlags.IsBrace ^ Flags_i1_) == (TermFlags)(-1) && ((TermFlags)(-257) | TermFlags.IsMemberSelect ^ Flags_i1_) == (TermFlags)(-1) && 
                                                                                                                                                                                                                                                                     ((TermFlags)(-262145) | TermFlags.IsKeyword ^ Flags_i1_) == (TermFlags)(-1) && text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.11"/>
<log level="message" time="2012-12-24 20:11:10Z" category="progress" message="   72 runs (20.83 % retries), 1/90 blocks covered"/>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<explorable title="guessed how to create Irony.Parsing.StringLiteral" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="StringLiteral" token="20000a6" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\StringLiteralFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for Irony.Parsing.StringLiteral instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<typeDefinition assemblyName="IronTuring.Tests" name="StringLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="IronTuring.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="Irony" name="StringLiteral" token="20000a6" namespace="Irony.Parsing"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for Irony.Parsing.StringLiteral instances</summary>
]]></doc>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol_s1" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="options_w" position="2"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="StringOptions" token="20000a4" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="astNodeCreator_astNodeCreator" position="3"><type spec="Class"><definition assemblyName="Irony" name="AstNodeCreator" token="2000090" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="Precedence_i" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s3" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="11"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="13"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Escapes_escapeTable" position="15"><type spec="Class"><definition assemblyName="Irony" name="EscapeTable" token="200005d" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseSensitivePrefixesSuffixes_b1_" position="16"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="17"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringLiteral" token="20000a6" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="IronTuring.Tests" name="StringLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="IronTuring.Tests" name="Create" static="true"><declaringType assemblyName="IronTuring.Tests" name="StringLiteralFactory" token="ffffffff" namespace="Irony.Parsing"/>
<parameter name="name_s" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="startEndSymbol_s1" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="options_w" position="2"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="StringOptions" token="20000a4" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="astNodeCreator_astNodeCreator" position="3"><type spec="Class"><definition assemblyName="Irony" name="AstNodeCreator" token="2000090" namespace="Irony.Ast"/>
</type>
</parameter>
<parameter name="Precedence_i" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="Name_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="ErrorAlias_s3" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="Flags_i1_" position="7"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TermFlags" token="200009e" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Associativity_i2_" position="8"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="Associativity" token="2000049" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Category_i3_" position="9"><type spec="ValueType"><definition assemblyName="Irony" valueType="true" name="TokenCategory" token="200004c" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="Priority_i1" position="10"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="EditorInfo_tokenEditorInfo" position="11"><type spec="Class"><definition assemblyName="Irony" name="TokenEditorInfo" token="20000b7" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="MultilineIndex_b" position="12"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</type>
</parameter>
<parameter name="IsPairFor_terminal" position="13"><type spec="Class"><definition assemblyName="Irony" name="Terminal" token="2000023" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="EscapeChar_c" position="14"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
</type>
</parameter>
<parameter name="Escapes_escapeTable" position="15"><type spec="Class"><definition assemblyName="Irony" name="EscapeTable" token="200005d" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="CaseSensitivePrefixesSuffixes_b1_" position="16"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="grammarData_grammarData" position="17"><type spec="Class"><definition assemblyName="Irony" name="GrammarData" token="2000077" namespace="Irony.Parsing"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="Irony" name="StringLiteral" token="20000a6" namespace="Irony.Parsing"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="TypeOfExpr" state="success" duration="0.01"/>
<test name="TypeOfExpr" state="success" duration="0.38"/>
<test name="TypeOfExpr" state="success" duration="0.04"/>
<log level="message" time="2012-12-24 20:11:14Z" category="summaries" message="using summary for Char.ToLower(Char)"/>
<log level="message" time="2012-12-24 20:11:14Z" category="summaries" message="using summary for Char.ToUpper(Char)"/>
<test name="TypeOfExpr" state="success" duration="0.23"/>
<generatedTest id="a2795915-a119-4a62-892a-17861bad7cf5" index="7" run="77" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="IronTuring.Tests" name="TypeOfExprThrowsNullReferenceException771"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="ffffffff" namespace="IronTuring"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="1" atot="90"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="expr">new ParseTreeNode{Token=null,AstNode=null,Term=null,Precedence=0,Associativity=Left,Span=new SourceSpan{Location=new SourceLocation{Position=0,Line=0,Column=0},Length=0,EndPosition=0},IsError=false,Tag=null,Comments=null,ChildNodes=Count = 0}</value>
<value name="symbolTable">null</value>
<code><![CDATA[StringLiteral stringLiteral;
Token token;
ParseTreeNode parseTreeNode;
Type type;
stringLiteral = new StringLiteral((string)null, "\u0be5", 
                                  StringOptions.AllowsUEscapes, (AstNodeCreator)null);
stringLiteral.Precedence = 0;
stringLiteral.Name = (string)null;
stringLiteral.ErrorAlias = (string)null;
stringLiteral.Flags = TermFlags.None;
stringLiteral.Associativity = Associativity.Left;
stringLiteral.Category = TokenCategory.Content;
stringLiteral.Priority = 0;
stringLiteral.EditorInfo = (TokenEditorInfo)null;
stringLiteral.MultilineIndex = (byte)0;
stringLiteral.IsPairFor = (Terminal)null;
stringLiteral.EscapeChar = '@';
stringLiteral.Escapes = (EscapeTable)null;
stringLiteral.CaseSensitivePrefixesSuffixes = false;
stringLiteral.Init((GrammarData)null);
token = new Token((Terminal)stringLiteral, default(SourceLocation), 
                  (string)null, (object)null);
token.KeyTerm = (KeyTerm)null;
token.Value = (object)null;
token.Details = (object)null;
token.Flags = (TokenFlags)0;
token.EditorInfo = (TokenEditorInfo)null;
token.OtherBrace = (Token)null;
token.ScannerState = (short)32;
parseTreeNode = new ParseTreeNode(token);
parseTreeNode.Token = (Token)null;
parseTreeNode.AstNode = (object)null;
parseTreeNode.Term = (BnfTerm)null;
parseTreeNode.Precedence = 0;
parseTreeNode.Associativity = Associativity.Left;
parseTreeNode.Span = default(SourceSpan);
parseTreeNode.IsError = false;
parseTreeNode.Tag = (object)null;
parseTreeNode.Comments = (TokenList)null;
type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
]]></code>
<methodCode imports="Irony.Parsing;System;Irony.Ast;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(CodeGenTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void TypeOfExprThrowsNullReferenceException771()
{
    StringLiteral stringLiteral;
    Token token;
    ParseTreeNode parseTreeNode;
    Type type;
    stringLiteral = new StringLiteral((string)null, "\u0be5", 
                                      StringOptions.AllowsUEscapes, (AstNodeCreator)null);
    stringLiteral.Precedence = 0;
    stringLiteral.Name = (string)null;
    stringLiteral.ErrorAlias = (string)null;
    stringLiteral.Flags = TermFlags.None;
    stringLiteral.Associativity = Associativity.Left;
    stringLiteral.Category = TokenCategory.Content;
    stringLiteral.Priority = 0;
    stringLiteral.EditorInfo = (TokenEditorInfo)null;
    stringLiteral.MultilineIndex = (byte)0;
    stringLiteral.IsPairFor = (Terminal)null;
    stringLiteral.EscapeChar = '@';
    stringLiteral.Escapes = (EscapeTable)null;
    stringLiteral.CaseSensitivePrefixesSuffixes = false;
    stringLiteral.Init((GrammarData)null);
    token = new Token((Terminal)stringLiteral, default(SourceLocation), 
                      (string)null, (object)null);
    token.KeyTerm = (KeyTerm)null;
    token.Value = (object)null;
    token.Details = (object)null;
    token.Flags = (TokenFlags)0;
    token.EditorInfo = (TokenEditorInfo)null;
    token.OtherBrace = (Token)null;
    token.ScannerState = (short)32;
    parseTreeNode = new ParseTreeNode(token);
    parseTreeNode.Token = (Token)null;
    parseTreeNode.AstNode = (object)null;
    parseTreeNode.Term = (BnfTerm)null;
    parseTreeNode.Precedence = 0;
    parseTreeNode.Associativity = Associativity.Left;
    parseTreeNode.Span = default(SourceSpan);
    parseTreeNode.IsError = false;
    parseTreeNode.Tag = (object)null;
    parseTreeNode.Comments = (TokenList)null;
    type = this.TypeOfExpr(parseTreeNode, (SymbolTable)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="IronTuring.Tests"/>
<reference name="Irony" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\Irony.dll"/>
<reference name="IronTuring" location="C:\skydrive\programming\IronTuring\IronTuring\bin\Debug\IronTuring.exe"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="IronTuring"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable) in C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs(664)" method="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="7" file="C:\skydrive\programming\IronTuring\IronTuring\CodeGen.cs" line="664"><method assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        static public Type TypeOfExpr(ParseTreeNode expr, SymbolTable symbolTable)
        {]]></beforeSource>
<source><![CDATA[            if (expr.Term.Name == "stringLiteral")]]></source>
<afterSource><![CDATA[            {
                return typeof(string);
            }]]></afterSource>
</frame>
<frame value="  at CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" method="CodeGenTest.TypeOfExpr(ParseTreeNode, SymbolTable)" offset="2"><method assemblyName="IronTuring.Tests" name="TypeOfExpr" token="6000004"><declaringType assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="IronTuring.Tests" name="CodeGenTest" token="2000003" namespace="IronTuring"/>
</type>
</parameter>
<parameter name="expr" position="1"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="2"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="a2795915-a119-4a62-892a-17861bad7cf5" kind="precondition" shortMethodNameWithParameters="CodeGen.TypeOfExpr(ParseTreeNode, SymbolTable)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="IronTuring" name="TypeOfExpr" static="true" token="6000016"><declaringType assemblyName="IronTuring" name="CodeGen" token="2000006" namespace="IronTuring"/>
<parameter name="expr" position="0"><type spec="Class"><definition assemblyName="Irony" name="ParseTreeNode" token="2000052" namespace="Irony.Parsing"/>
</type>
</parameter>
<parameter name="symbolTable" position="1"><type spec="Class"><definition assemblyName="IronTuring" name="SymbolTable" token="200000c" namespace="IronTuring"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</resultType>
</definition>
</method>
<code><![CDATA[if (expr.Term == (BnfTerm)null)
  throw new ArgumentNullException("expr");
]]></code>
</fix>
<pathAssumption><![CDATA[StringLiteral s0 = new;
return term_terminal == (Terminal)s0 && term_terminal != (Terminal)null && 
                                        expr == (ParseTreeNode)s0 && expr != (ParseTreeNode)null && token_token != (Token)null && token_token == (Token)s0 && term_terminal.GetType() != typeof(RegexLiteral) && 
                                                                                                                                                              term_terminal.GetType() != typeof(LineContinuationTerminal) && term_terminal.GetType() != typeof(IdentifierTerminal) && term_terminal.GetType() != typeof(ConstantTerminal) && 
                                                                                                                                                                                                                                                                                      term_terminal.GetType() != typeof(WikiTagTerminal) && term_terminal.GetType() != typeof(ImpliedSymbolTerminal) && term_terminal.GetType() != typeof(WikiTextTerminal) && 
                                                                                                                                                                                                                                                                                                                                                                                                        term_terminal.GetType() != typeof(FreeTextLiteral) && term_terminal.GetType() != typeof(WikiBlockTerminal) && term_terminal.GetType() != typeof(KeyTerm);
]]></pathAssumption>
<pathCondition><![CDATA[return startEndSymbol_s1 != (string)null && (uint)((int.MaxValue & (int.MinValue ^ startEndSymbol_s1.GetHashCode())) % 3) < 3u && startEndSymbol_s1.Length != 0 && 
                                                                                                                                  ((int)((ushort)(startEndSymbol_s1[0])) < 90 && 65 < (int)((ushort)(startEndSymbol_s1[0])) ? (char)(32u + (ushort)(startEndSymbol_s1[0])) : startEndSymbol_s1[0]) == startEndSymbol_s1[0] && 
                                                                                                                                  ((int)((ushort)(startEndSymbol_s1[0])) < 122 && 97 < (int)((ushort)(startEndSymbol_s1[0])) ? (char)((ushort)(startEndSymbol_s1[0]) - 32u) : startEndSymbol_s1[0]) == startEndSymbol_s1[0] && 
                                                                                                                                  (short)(8 & (-9 ^ (short)options_w)) == 0 && CaseSensitivePrefixesSuffixes_b1_ == false && 
                                                                                                                                                                               (short)(4 & (-5 ^ (short)options_w)) == 0 && EditorInfo_tokenEditorInfo == (TokenEditorInfo)null && text_s == (string)null && Term_bnfTerm == (BnfTerm)null;
]]></pathCondition>
</generatedTest>
<test name="TypeOfExpr" state="success" duration="0.04"/>
<test name="TypeOfExpr" state="success" duration="0.06"/>
<test name="TypeOfExpr" state="success" duration="0.05"/>
<test name="TypeOfExpr" state="success" duration="0.00"/>
<boundary kind="cancelled" value="true" message="cancellation requested"/>
<coverage domain="usercodeundertest" unit="block" covered="1" total="90" coveredRatio="0.011111111111111112"/>
<sourceCoverage xml="cov\e323\cov.xml" html="cov\e323\cov.html"/>
<explorable title="could not create an instance of Irony.Parsing.LineContinuationTerminal" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="LineContinuationTerminal" token="2000086" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
</explorable>
<explorable title="could not create an instance of Irony.Parsing.ImpliedSymbolTerminal" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="ImpliedSymbolTerminal" token="200006e" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
</explorable>
<explorable title="could not create an instance of Irony.Parsing.FreeTextLiteral" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="Irony" name="FreeTextLiteral" token="20000bc" namespace="Irony.Parsing"/>
</explorableType>
<testAssemblyName name="IronTuring.Tests"/>
</explorable>
<result name="TypeOfExpr(ParseTreeNode, SymbolTable)" state="success" duration="61.9528386748831"/>
<duration start="2012-12-24 20:10:18Z" end="2012-12-24 20:11:20Z" seconds="61.9585438"/>
<trajectory><image src="fix\ironturingcodege634919586807926292.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="7" total="128" coveredRatio="0.0546875"/>
<sourceCoverage xml="cov\t951\cov.xml" html="cov\t951\cov.html"/>
<duration start="2012-12-24 20:10:18Z" end="2012-12-24 20:11:20Z" seconds="62.2355596"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="14" total="175" coveredRatio="0.08"/>
<sourceCoverage xml="cov\a34609194\cov.xml" html="cov\a34609194\cov.html"/>
<duration start="2012-12-24 20:10:13Z" end="2012-12-24 20:11:21Z" seconds="67.8938833"/>
<frameTreeRef exceptionCount="3"/>
</assembly>
<duration start="2012-12-24 20:10:10Z" end="2012-12-24 20:11:21Z" seconds="71.0760653"/>
<background/>
</pex>
